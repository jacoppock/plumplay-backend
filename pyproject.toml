[tool.poetry]
name = "plumplay-backend"
version = "0.1.0"
description = "Your project description"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
django = "^4.2.3"
psycopg2-binary = "^2.9.3"
whitenoise = "^6.4"
aiohttp = "^3.10.5"
authlib = "^1.3.2"
azure-storage-blob = "^12.22.0"
celery = "^5.2.7"
dapr = "^1.14.0"
dateparser = "^1.2.0"
django-auto-logout = "^0.5.1"
django-ckeditor = "^6.7.1"
django-extensions = "^3.2.3"
django-ninja = "^1.3.0"
django-storages = {extras = ["azure"], version = "^1.14.4"}
django-tree-queries = "^0.15.0"
email-validator = "^2.0.0.post2"
faxplus-api = "^3.0.4"
fontawesomefree = "^6.6.0"
fpdf2 = "^2.7.9"
gevent = "^24.2.1"
gunicorn = "^20.1.0"
llama-index = "^0.11.10"
msal = "^1.31.0"
nameparser = "^1.1.3"
openai = "^1.45.1"
phonenumbers = "^8.13.45"
pillow = "^10.4.0"
pydantic = "^2.9.1"
python-benedict = "^0.32.1"
python-dotenv = "^1.0.1"
python-json-logger = "^2.0.7"
python-magic = "^0.4.27"
sendgrid = "^6.11.0"
sqlparse = "^0.4.4"
stream-chat = "^4.8.0"
stripe = "^5.5.0"
tiktoken = "^0.7.0"
urllib3 = "1.26.20"
uvicorn = "^0.30.6"
vital = "^1.3.7"
xmltodict = "^0.13.0"
llama-index-llms-azure-openai = "^0.2.1"
llama-index-embeddings-azure-openai = "^0.2.5"
llama-index-llms-openai = "^0.2.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "plumplay-backend"
dynamic = ["version"]
dependencies = [
    "django>=4.2.3,<5",
    "psycopg2==2.9.3",
    "whitenoise~=6.4",
    "gunicorn~=20.1",
    "social-auth-app-django~=5.0",
    "stripe~=5.1",
    "fontawesomefree~=6.3",
    "sendgrid~=6.9",
    "python-json-logger~=2.0",
    "django-ckeditor~=6.5",
    "django-storages[azure]~=1.13",
    "dapr~=1.10",
    "vital~=1.3.7",
    "celery~=5.2.7",
    "gevent>=23.9.0",
    "pydantic~=2.9.1",
    "dateparser~=1.1",
    "xmltodict~=0.13",
    "sqlparse~=0.4.4",
    "django-auto-logout~=0.5.1",
    "faxplus-api~=3.0.3",
    "phonenumbers~=8.13.11",
    "requests~=2.31",
    "cryptography~=41.0.2",
    "msal~=1.22",
    "authlib~=1.0",
    "django-ninja~=1.3.0",
    "stream-chat~=4.8.0",
    "openai~=1.46.0",
    "tiktoken~=0.7",
    "django-extensions~=3.2.3",
    "aiohttp>=3.8.5,<4",
    "python-benedict~=0.32.0",
    "fpdf2~=2.7.4",
    "certifi>=2023.07.22",
    "email-validator~=2.0.0",
    "django-tree-queries~=0.15.0",
    "python-magic~=0.4.27",
    "pillow>=10.0.1,<11",
    "urllib3>=1.26.18,<2",
    "uvicorn~=0.23",
    "nameparser==1.1.3",
    "typing-extensions~=4.9",
    "llama-index-llms-azure-openai==0.2.1",
    "llama-index-llms-openai~=0.2.9",
    "llama-index~=0.11.10",

]

[project.optional-dependencies]
dev = [
    "black~=23.1",
    "ruff",
    "isort~=5.10",
    "mypy~=1.9",
    "django-types==0.19.1",
    "pytest~=8.1",
    "pytest-cov",
    "pytest-django~=4.8",
    "responses~=0.23.1",
    "celery-types~=0.15.0",
    "types-requests~=2.28.11",
    "types-dateparser~=1.1.4",
    "python-dotenv~=1.0.0",
    "pytest-mock~=3.11",
    "dirty-equals~=0.6.0",
    "hypothesis~=6.82.6",
    "pytest-xdist~=3.5",
    "types-python-dateutil"
]

[tool.setuptools_scm]

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
ignore_missing_imports = true
warn_return_any = false
warn_unused_ignores = false
enable_incomplete_feature = "Unpack"

[tool.ruff]
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "base.test_settings"
addopts = "-v --nomigrations --disable-warnings --cov-report html --cov=src"
markers = ["slow: marks tests as slow (deselect with '-k-slow')."]
pythonpath = ["src"]
testpaths = "tests"
collect_ignore = ["manage.py"]
